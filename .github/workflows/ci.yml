# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json
# GitHub Workflow を用いた CI。
# .github/workflows の中にある限り、ファイル名は自由。

name: CI
on:
  pull_request:
  push:
    branches:
	# <template repeat />
    - main

# <template optional desc="CI 全体で使う環境変数" />
env:
  # このように書くと、 GitHub Secrets の DATABASE_URL を参照可能: https://docs.github.com/ja/actions/security-for-github-actions/security-guides/using-secrets-in-github-actions
  # GitHub の設定 > Security > Secrets and variables > Actions からアクセス可能。
  DATABASE_URL: ${{ secrets.DATABASE_URL }}

# <template optional desc="全 job の使うデフォルト" />
defaults:
  run:
    env:
      IS_CI: "true"

jobs:
  # <template repeat desc="複数の CI ジョブを指定可能: 各ジョブの環境は分離される" />
  build: 
    runs-on: ubuntu-latest
    timeout-minutes: 10 # <template optional />
    steps:
      # <template repeat desc="このジョブのステップ: 各ステップは同一環境で順番に実行される"/>
      - uses: actions/checkout@v4
      - uses: oven-sh/setup-bun@v2
      - run: bun install --frozen-lockfile
      - run: bun run build

  # ここでは Biome を使っている。 https://biomejs.dev/ja/recipes/continuous-integration/
  # Prettier / Eslint も調べたら出てくるはず。 
  code-style:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: biomejs/setup-biome@v4
      - run: biome check

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: oven-sh/setup-bun@v2
      - run: bun run test:bun
        working-directory: basic-program

  cache-sample:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4 # npm install は遅いことで有名なので、ここではサンプルで npm install を使っている。
      - uses: actions/cache@v4
        with:
          path: |
            node_modules
          key: node_modules-cache-${{ runner.os }}--${{ hashFiles("**/package-lock.json") }}
      - run: npm install
