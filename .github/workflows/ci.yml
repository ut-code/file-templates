# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json
# GitHub Workflow を用いた CI。
# .github/workflows の中にある限り、ファイル名は自由。
# doc: https://docs.github.com/en/actions/writing-workflows/quickstart
# more samples: https://github.com/actions/starter-workflows/tree/main/ci

# ディレクトリをキャッシュすることも可能。詳しくは ./rust.yml を見ること。

name: CI
on:
  pull_request:
  push:
    branches:
      # <template repeat />
      - main

# <template optional desc="CI 全体で使う環境変数" />
env:
  # このように書くと、 GitHub Secrets の DATABASE_URL を参照可能: https://docs.github.com/ja/actions/security-for-github-actions/security-guides/using-secrets-in-github-actions
  # GitHub の設定 > Security > Secrets and variables > Actions からアクセス可能。
  DATABASE_URL: ${{ secrets.DATABASE_URL }}

# <template optional desc="全 job の使うデフォルト" />
defaults:
  run:
    working-directory: .

jobs:
  # <template repeat desc="複数の CI ジョブを指定可能: 各ジョブの環境は分離される" />
  build:
    name: "Build"
    runs-on: ubuntu-latest
    timeout-minutes: 10 # <template optional />
    defaults: # <template optional />
      run:
        working-directory: basic-program
    steps:
      # <template repeat desc="このジョブのステップ: 各ステップは同一環境で順番に実行される"/>
      - uses: actions/checkout@v4
      - uses: oven-sh/setup-bun@v2
      - run: bun install --frozen-lockfile
      - run: bun run build

  # ここでは Biome を使っている。 https://biomejs.dev/ja/recipes/continuous-integration/
  # Eslint も調べたら出てくるはず。
  lint-with-biome:
    name: "Lint with Biome"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: biomejs/setup-biome@v2
      - run: biome lint
  prettier:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: oven-sh/setup-bun@v2
      - run: bun install --frozen-lockfile
      - run: bunx prettier . --check

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: oven-sh/setup-bun@v2
      - run: bun run test:bun
        working-directory: basic-program
